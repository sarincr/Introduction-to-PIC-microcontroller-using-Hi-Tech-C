

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sat May 01 03:42:48 2021

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_ADC_Init
    43                           	FNCALL	_main,_ADC_Read
    44                           	FNROOT	_main
    45                           	global	_ADCON0
    46                           psect	text88,local,class=CODE,delta=2
    47                           global __ptext88
    48  0000                     __ptext88:
    49  001F                     _ADCON0	set	31
    50                           	global	_ADRESH
    51  001E                     _ADRESH	set	30
    52                           	global	_PORTB
    53  0006                     _PORTB	set	6
    54                           	global	_PORTC
    55  0007                     _PORTC	set	7
    56                           	global	_CARRY
    57  0018                     _CARRY	set	24
    58                           	global	_GIE
    59  005F                     _GIE	set	95
    60                           	global	_GO_nDONE
    61  00FA                     _GO_nDONE	set	250
    62                           	global	_ADCON1
    63  009F                     _ADCON1	set	159
    64                           	global	_ADRESL
    65  009E                     _ADRESL	set	158
    66                           	global	_TRISA
    67  0085                     _TRISA	set	133
    68                           	global	_TRISB
    69  0086                     _TRISB	set	134
    70                           	global	_TRISC
    71  0087                     _TRISC	set	135
    72                           	global	_EEADR
    73  010D                     _EEADR	set	269
    74                           	global	_EEDATA
    75  010C                     _EEDATA	set	268
    76                           	global	_EECON1
    77  018C                     _EECON1	set	396
    78                           	global	_EECON2
    79  018D                     _EECON2	set	397
    80                           	global	_RD
    81  0C60                     _RD	set	3168
    82                           	global	_WR
    83  0C61                     _WR	set	3169
    84                           	global	_WREN
    85  0C62                     _WREN	set	3170
    86                           	file	"C:\Users\ANGICIA\AppData\Local\Temp\s78k."
    87                           	line	#
    88                           psect cinit,class=CODE,delta=2
    89                           global start_initialization
    90  0780                     start_initialization:
    91                           
    92                           psect cinit,class=CODE,delta=2
    93                           global end_of_initialization
    94                           
    95                           ;End of C runtime variable initialization code
    96                           
    97  0780                     end_of_initialization:
    98  0780  0183               clrf status
    99  0781  120A  118A  2F93   ljmp _main	;jump to C main() function
   100                           psect	cstackCOMMON,class=COMMON,space=1
   101                           global __pcstackCOMMON
   102  0070                     __pcstackCOMMON:
   103                           	global	?_ADC_Init
   104  0070                     ?_ADC_Init:	; 0 bytes @ 0x0
   105                           	global	??_ADC_Init
   106  0070                     ??_ADC_Init:	; 0 bytes @ 0x0
   107                           	global	?_main
   108  0070                     ?_main:	; 0 bytes @ 0x0
   109                           	global	?_ADC_Read
   110  0070                     ?_ADC_Read:	; 2 bytes @ 0x0
   111  0070                     	ds	2
   112                           	global	??_ADC_Read
   113  0072                     ??_ADC_Read:	; 0 bytes @ 0x2
   114  0072                     	ds	2
   115                           	global	ADC_Read@x
   116  0074                     ADC_Read@x:	; 1 bytes @ 0x4
   117  0074                     	ds	1
   118                           	global	??_main
   119  0075                     ??_main:	; 0 bytes @ 0x5
   120  0075                     	ds	3
   121                           	global	main@a
   122  0078                     main@a:	; 2 bytes @ 0x8
   123  0078                     	ds	2
   124 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   125 ;;Auto spaces:   Size  Autos    Used
   126 ;; COMMON          14     10      10
   127 ;; BANK0           80      0       0
   128 ;; BANK1           80      0       0
   129 ;; BANK3           96      0       0
   130 ;; BANK2           96      0       0
   131                           
   132 ;;
   133 ;; Pointer list with targets:
   134                           
   135 ;; ?_ADC_Read	unsigned int  size(1) Largest target is 0
   136 ;;
   137                           
   138                           
   139 ;;
   140 ;; Critical Paths under _main in COMMON
   141 ;;
   142 ;;   _main->_ADC_Read
   143 ;;
   144 ;; Critical Paths under _main in BANK0
   145 ;;
   146 ;;   None.
   147 ;;
   148 ;; Critical Paths under _main in BANK1
   149 ;;
   150 ;;   None.
   151 ;;
   152 ;; Critical Paths under _main in BANK3
   153 ;;
   154 ;;   None.
   155 ;;
   156 ;; Critical Paths under _main in BANK2
   157 ;;
   158 ;;   None.
   159                           
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   162 ;;
   163                           
   164 ;;
   165 ;;Call Graph Tables:
   166 ;;
   167 ;; ---------------------------------------------------------------------------------
   168 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   169 ;; ---------------------------------------------------------------------------------
   170 ;; (0) _main                                                 5     5      0      60
   171 ;;                                              5 COMMON     5     5      0
   172 ;;                           _ADC_Init
   173 ;;                           _ADC_Read
   174 ;; ---------------------------------------------------------------------------------
   175 ;; (1) _ADC_Read                                             5     3      2      30
   176 ;;                                              0 COMMON     5     3      2
   177 ;; ---------------------------------------------------------------------------------
   178 ;; (1) _ADC_Init                                             1     1      0       0
   179 ;;                                              0 COMMON     1     1      0
   180 ;; ---------------------------------------------------------------------------------
   181 ;; Estimated maximum stack depth 1
   182 ;; ---------------------------------------------------------------------------------
   183                           
   184 ;; Call Graph Graphs:
   185                           
   186 ;; _main (ROOT)
   187 ;;   _ADC_Init
   188 ;;   _ADC_Read
   189 ;;
   190                           
   191 ;; Address spaces:
   192                           
   193 ;;Name               Size   Autos  Total    Cost      Usage
   194 ;;BITCOMMON            E      0       0       0        0.0%
   195 ;;EEDATA             100      0       0       0        0.0%
   196 ;;NULL                 0      0       0       0        0.0%
   197 ;;CODE                 0      0       0       0        0.0%
   198 ;;COMMON               E      A       A       1       71.4%
   199 ;;BITSFR0              0      0       0       1        0.0%
   200 ;;SFR0                 0      0       0       1        0.0%
   201 ;;BITSFR1              0      0       0       2        0.0%
   202 ;;SFR1                 0      0       0       2        0.0%
   203 ;;STACK                0      0       1       2        0.0%
   204 ;;ABS                  0      0       0       3        0.0%
   205 ;;BITBANK0            50      0       0       4        0.0%
   206 ;;BITSFR3              0      0       0       4        0.0%
   207 ;;SFR3                 0      0       0       4        0.0%
   208 ;;BANK0               50      0       0       5        0.0%
   209 ;;BITSFR2              0      0       0       5        0.0%
   210 ;;SFR2                 0      0       0       5        0.0%
   211 ;;BITBANK1            50      0       0       6        0.0%
   212 ;;BANK1               50      0       0       7        0.0%
   213 ;;BITBANK3            60      0       0       8        0.0%
   214 ;;BANK3               60      0       0       9        0.0%
   215 ;;BITBANK2            60      0       0      10        0.0%
   216 ;;BANK2               60      0       0      11        0.0%
   217 ;;DATA                 0      0       0      12        0.0%
   218                           
   219                           	global	_main
   220                           psect	maintext,global,class=CODE,delta=2
   221                           global __pmaintext
   222  0793                     __pmaintext:
   223                           
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 25 in file "main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;  a               2    8[COMMON] unsigned int 
   231 ;; Return value:  Size  Location     Type
   232 ;;		None               void
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : 17F/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   240 ;;      Params:         0       0       0       0       0
   241 ;;      Locals:         2       0       0       0       0
   242 ;;      Temps:          3       0       0       0       0
   243 ;;      Totals:         5       0       0       0       0
   244 ;;Total ram usage:        5 bytes
   245 ;; Hardware stack levels required when called:    1
   246 ;; This function calls:
   247 ;;		_ADC_Init
   248 ;;		_ADC_Read
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           psect	maintext
   254                           	file	"main.c"
   255                           	line	25
   256                           	global	__size_of_main
   257  002F                     	__size_of_main	equ	__end_of_main-_main
   258                           	
   259  0793                     _main:	
   260                           	opt	stack 7
   261                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   262                           	line	27
   263                           	
   264  0793                     l2624:	
   265                           ;main.c: 26: unsigned int a;
   266                           ;main.c: 27: TRISB = 0x00;
   267  0793  1683               	bsf	status, 5	;RP0=1, select bank1
   268  0794  1303               	bcf	status, 6	;RP1=0, select bank1
   269  0795  0186               	clrf	(134)^080h	;volatile
   270                           	line	28
   271                           ;main.c: 28: TRISC = 0x00;
   272  0796  0187               	clrf	(135)^080h	;volatile
   273                           	line	29
   274                           	
   275  0797                     l2626:	
   276                           ;main.c: 29: TRISA = 0xFF;
   277  0797  30FF               	movlw	(0FFh)
   278  0798  0085               	movwf	(133)^080h	;volatile
   279                           	line	30
   280                           	
   281  0799                     l2628:	
   282                           ;main.c: 30: ADC_Init();
   283  0799  120A  118A  2784   	fcall	_ADC_Init
              120A  118A         
   284  079E  2F9F               	goto	l2630
   285                           	line	32
   286                           ;main.c: 32: do
   287                           	
   288  079F                     l697:	
   289                           	line	34
   290                           	
   291  079F                     l2630:	
   292                           ;main.c: 33: {
   293                           ;main.c: 34: a = ADC_Read(0);
   294  079F  3000               	movlw	(0)
   295  07A0  120A  118A  27C2   	fcall	_ADC_Read
              120A  118A         
   296  07A5  0871               	movf	(1+(?_ADC_Read)),w
   297  07A6  01F9               	clrf	(main@a+1)
   298  07A7  07F9               	addwf	(main@a+1)
   299  07A8  0870               	movf	(0+(?_ADC_Read)),w
   300  07A9  01F8               	clrf	(main@a)
   301  07AA  07F8               	addwf	(main@a)
   302                           
   303                           	line	35
   304                           	
   305  07AB                     l2632:	
   306                           ;main.c: 35: PORTB = a;
   307  07AB  0878               	movf	(main@a),w
   308  07AC  1283               	bcf	status, 5	;RP0=0, select bank0
   309  07AD  1303               	bcf	status, 6	;RP1=0, select bank0
   310  07AE  0086               	movwf	(6)	;volatile
   311                           	line	36
   312                           	
   313  07AF                     l2634:	
   314                           ;main.c: 36: PORTC = a>>8;
   315  07AF  0879               	movf	(main@a+1),w
   316  07B0  0087               	movwf	(7)	;volatile
   317                           	line	37
   318                           	
   319  07B1                     l2636:	
   320                           ;main.c: 37: _delay((unsigned long)((100)*(8000000/4000.0)));
   321                           	opt asmopt_off
   322  07B1  3002               movlw  2
   323  07B2  00F7               movwf	((??_main+0)+0+2),f
   324  07B3  3004               movlw	4
   325  07B4  00F6               movwf	((??_main+0)+0+1),f
   326  07B5  30BA               	movlw	186
   327  07B6  00F5               movwf	((??_main+0)+0),f
   328  07B7                     u2257:
   329  07B7  0BF5               	decfsz	((??_main+0)+0),f
   330  07B8  2FB7               	goto	u2257
   331  07B9  0BF6               	decfsz	((??_main+0)+0+1),f
   332  07BA  2FB7               	goto	u2257
   333  07BB  0BF7               	decfsz	((??_main+0)+0+2),f
   334  07BC  2FB7               	goto	u2257
   335  07BD  0064               	clrwdt
   336                           opt asmopt_on
   337                           
   338                           	line	38
   339                           ;main.c: 38: }while(1);
   340  07BE  2F9F               	goto	l2630
   341                           	
   342  07BF                     l698:	
   343                           	line	39
   344                           	
   345  07BF                     l699:	
   346                           	global	start
   347  07BF  120A  118A  2800   	ljmp	start
   348                           	opt stack 0
   349                           GLOBAL	__end_of_main
   350  07C2                     	__end_of_main:
   351 ;; =============== function _main ends ============
   352                           
   353                           	signat	_main,88
   354                           	global	_ADC_Read
   355                           psect	text89,local,class=CODE,delta=2
   356                           global __ptext89
   357  07C2                     __ptext89:
   358                           
   359 ;; *************** function _ADC_Read *****************
   360 ;; Defined at:
   361 ;;		line 14 in file "main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  x               1    wreg     unsigned char 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  x               1    4[COMMON] unsigned char 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  2    0[COMMON] unsigned int 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, btemp+1
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         2       0       0       0       0
   376 ;;      Locals:         1       0       0       0       0
   377 ;;      Temps:          2       0       0       0       0
   378 ;;      Totals:         5       0       0       0       0
   379 ;;Total ram usage:        5 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           psect	text89
   388                           	file	"main.c"
   389                           	line	14
   390                           	global	__size_of_ADC_Read
   391  003E                     	__size_of_ADC_Read	equ	__end_of_ADC_Read-_ADC_Read
   392                           	
   393  07C2                     _ADC_Read:	
   394                           	opt	stack 7
   395                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
   396                           ;ADC_Read@x stored from wreg
   397  07C2  00F4               	movwf	(ADC_Read@x)
   398                           	line	15
   399                           	
   400  07C3                     l2608:	
   401                           ;main.c: 15: if(x > 7)
   402  07C3  3008               	movlw	(08h)
   403  07C4  0274               	subwf	(ADC_Read@x),w
   404  07C5  1C03               	skipc
   405  07C6  2FC8               	goto	u2221
   406  07C7  2FC9               	goto	u2220
   407  07C8                     u2221:
   408  07C8  2FCD               	goto	l2614
   409  07C9                     u2220:
   410                           	line	16
   411                           	
   412  07C9                     l2610:	
   413                           ;main.c: 16: return 0;
   414  07C9  01F0               	clrf	(?_ADC_Read)
   415  07CA  01F1               	clrf	(?_ADC_Read+1)
   416  07CB  2FFF               	goto	l691
   417                           	
   418  07CC                     l2612:	
   419  07CC  2FFF               	goto	l691
   420                           	
   421  07CD                     l690:	
   422                           	line	17
   423                           	
   424  07CD                     l2614:	
   425                           ;main.c: 17: ADCON0 |= x<<3;
   426  07CD  0874               	movf	(ADC_Read@x),w
   427  07CE  00F2               	movwf	(??_ADC_Read+0)+0
   428  07CF  3002               	movlw	(03h)-1
   429  07D0                     u2235:
   430  07D0  1003               	clrc
   431  07D1  0DF2               	rlf	(??_ADC_Read+0)+0,f
   432  07D2  3EFF               	addlw	-1
   433  07D3  1D03               	skipz
   434  07D4  2FD0               	goto	u2235
   435  07D5  1003               	clrc
   436  07D6  0D72               	rlf	(??_ADC_Read+0)+0,w
   437  07D7  00F3               	movwf	(??_ADC_Read+1)+0
   438  07D8  0873               	movf	(??_ADC_Read+1)+0,w
   439  07D9  1283               	bcf	status, 5	;RP0=0, select bank0
   440  07DA  1303               	bcf	status, 6	;RP1=0, select bank0
   441  07DB  049F               	iorwf	(31),f	;volatile
   442                           	line	18
   443                           	
   444  07DC                     l2616:	
   445                           ;main.c: 18: _delay((unsigned long)((2)*(8000000/4000.0)));
   446                           	opt asmopt_off
   447  07DC  3006               movlw	6
   448  07DD  00F3               movwf	((??_ADC_Read+0)+0+1),f
   449  07DE  3030               	movlw	48
   450  07DF  00F2               movwf	((??_ADC_Read+0)+0),f
   451  07E0                     u2267:
   452  07E0  0BF2               	decfsz	((??_ADC_Read+0)+0),f
   453  07E1  2FE0               	goto	u2267
   454  07E2  0BF3               	decfsz	((??_ADC_Read+0)+0+1),f
   455  07E3  2FE0               	goto	u2267
   456  07E4  0064               	clrwdt
   457                           opt asmopt_on
   458                           
   459                           	line	19
   460                           	
   461  07E5                     l2618:	
   462                           ;main.c: 19: GO_nDONE = 1;
   463  07E5  1283               	bcf	status, 5	;RP0=0, select bank0
   464  07E6  1303               	bcf	status, 6	;RP1=0, select bank0
   465  07E7  151F               	bsf	(250/8),(250)&7
   466                           	line	20
   467                           ;main.c: 20: while(GO_nDONE);
   468  07E8  2FE9               	goto	l692
   469                           	
   470  07E9                     l693:	
   471                           	
   472  07E9                     l692:	
   473  07E9  191F               	btfsc	(250/8),(250)&7
   474  07EA  2FEC               	goto	u2241
   475  07EB  2FED               	goto	u2240
   476  07EC                     u2241:
   477  07EC  2FE9               	goto	l692
   478  07ED                     u2240:
   479  07ED  2FEE               	goto	l2620
   480                           	
   481  07EE                     l694:	
   482                           	line	21
   483                           	
   484  07EE                     l2620:	
   485                           ;main.c: 21: return ((ADRESH<<8)+ADRESL);
   486  07EE  081E               	movf	(30),w	;volatile
   487  07EF  00F2               	movwf	(??_ADC_Read+0)+0
   488  07F0  01F3               	clrf	(??_ADC_Read+0)+0+1
   489  07F1  0872               	movf	(??_ADC_Read+0)+0,w
   490  07F2  00F3               	movwf	(??_ADC_Read+0)+1
   491  07F3  01F2               	clrf	(??_ADC_Read+0)+0
   492  07F4  1683               	bsf	status, 5	;RP0=1, select bank1
   493  07F5  1303               	bcf	status, 6	;RP1=0, select bank1
   494  07F6  081E               	movf	(158)^080h,w	;volatile
   495  07F7  0772               	addwf	0+(??_ADC_Read+0)+0,w
   496  07F8  00F0               	movwf	(?_ADC_Read)
   497  07F9  3000               	movlw	0
   498  07FA  1803               	skipnc
   499  07FB  3001               	movlw	1
   500  07FC  0773               	addwf	1+(??_ADC_Read+0)+0,w
   501  07FD  00F1               	movwf	1+(?_ADC_Read)
   502  07FE  2FFF               	goto	l691
   503                           	
   504  07FF                     l2622:	
   505                           	line	22
   506                           	
   507  07FF                     l691:	
   508  07FF  0008               	return
   509                           	opt stack 0
   510                           GLOBAL	__end_of_ADC_Read
   511  0800                     	__end_of_ADC_Read:
   512 ;; =============== function _ADC_Read ends ============
   513                           
   514                           	signat	_ADC_Read,4218
   515                           	global	_ADC_Init
   516                           psect	text90,local,class=CODE,delta=2
   517                           global __ptext90
   518  0784                     __ptext90:
   519                           
   520 ;; *************** function _ADC_Init *****************
   521 ;; Defined at:
   522 ;;		line 7 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;		None               void
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          1       0       0       0       0
   539 ;;      Totals:         1       0       0       0       0
   540 ;;Total ram usage:        1 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           psect	text90
   549                           	file	"main.c"
   550                           	line	7
   551                           	global	__size_of_ADC_Init
   552  000F                     	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_Init
   553                           	
   554  0784                     _ADC_Init:	
   555                           	opt	stack 7
   556                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
   557                           	line	8
   558                           	
   559  0784                     l1746:	
   560                           ;main.c: 8: ADCON0 = 0b1000001;
   561  0784  3041               	movlw	(041h)
   562  0785  1283               	bcf	status, 5	;RP0=0, select bank0
   563  0786  1303               	bcf	status, 6	;RP1=0, select bank0
   564  0787  009F               	movwf	(31)	;volatile
   565                           	line	9
   566                           ;main.c: 9: ADCON1 = 0b11000000;
   567  0788  30C0               	movlw	(0C0h)
   568  0789  1683               	bsf	status, 5	;RP0=1, select bank1
   569  078A  1303               	bcf	status, 6	;RP1=0, select bank1
   570  078B  009F               	movwf	(159)^080h	;volatile
   571                           	line	10
   572                           	
   573  078C                     l1748:	
   574                           ;main.c: 10: ADCON0 &= 0b11000101;
   575  078C  30C5               	movlw	(0C5h)
   576  078D  00F0               	movwf	(??_ADC_Init+0)+0
   577  078E  0870               	movf	(??_ADC_Init+0)+0,w
   578  078F  1283               	bcf	status, 5	;RP0=0, select bank0
   579  0790  1303               	bcf	status, 6	;RP1=0, select bank0
   580  0791  059F               	andwf	(31),f	;volatile
   581                           	line	11
   582                           	
   583  0792                     l687:	
   584  0792  0008               	return
   585                           	opt stack 0
   586                           GLOBAL	__end_of_ADC_Init
   587  0793                     	__end_of_ADC_Init:
   588 ;; =============== function _ADC_Init ends ============
   589                           
   590                           	signat	_ADC_Init,88
   591                           psect	text91,local,class=CODE,delta=2
   592                           global __ptext91
   593  0000                     __ptext91:
   594                           	global	btemp
   595  007E                     	btemp set 07Eh
   596                           
   597                           	DABS	1,126,2	;btemp
   598                           	global	wtemp0
   599  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat May 01 03:42:48 2021

                  _RD 0C60                    _WR 0C61                   l690 07CD                   l691 07FF  
                 l692 07E9                   l693 07E9                   l694 07EE                   l687 0792  
                 l697 079F                   l698 07BF                   l699 07BF                   _GIE 005F  
                l2610 07C9                  l2620 07EE                  l2612 07CC                  l2622 07FF  
                l2614 07CD                  l2630 079F                  l2616 07DC                  l2608 07C3  
                l2632 07AB                  l2624 0793                  l1746 0784                  l2618 07E5  
                l2634 07AF                  l2626 0797                  l1748 078C                  l2636 07B1  
                l2628 0799                  u2220 07C9                  u2221 07C8                  u2240 07ED  
                u2241 07EC                  u2235 07D0                  u2257 07B7                  u2267 07E0  
                _WREN 0C62                  _main 0793                  btemp 007E      __end_of_ADC_Init 0793  
    __end_of_ADC_Read 0800                  start 0000                 ?_main 0070                 _EEADR 010D  
               _CARRY 0018                 _PORTB 0006                 _PORTC 0007                 _TRISA 0085  
               _TRISB 0086                 _TRISC 0087                 main@a 0078                 status 0003  
               wtemp0 007E          __end_of_main 07C2                ??_main 0075                _ADCON0 001F  
              _ADCON1 009F                _ADRESH 001E                _ADRESL 009E                _EEDATA 010C  
              _EECON1 018C                _EECON2 018D             ADC_Read@x 0074             ?_ADC_Init 0070  
           ?_ADC_Read 0070        __pcstackCOMMON 0070            ??_ADC_Init 0070            ??_ADC_Read 0072  
          __pmaintext 0793  end_of_initialization 0780     __size_of_ADC_Init 000F     __size_of_ADC_Read 003E  
 start_initialization 0780              _ADC_Init 0784              _ADC_Read 07C2              _GO_nDONE 00FA  
            __ptext90 0784              __ptext91 0000              __ptext88 0000              __ptext89 07C2  
       __size_of_main 002F  
